#include <iostream>
#include <fstream>
#include <string>
#include <unordered_map>
#include <vector>
#include <utility>
#include <algorithm> 
#include <cctype>


void countWordFrequency(const std::string& filename) {
    std::ifstream file(filename);
    if (!file.is_open()) {
        std::cerr << "No file found: " << filename << std::endl;
        return;
    }

    std::unordered_map<std::string, int> wordFrequency;
    std::string word;

    while (file >> word) {
        //removes other than the alphanumeric
        word.erase(std::remove_if(word.begin(), word.end(), [](char c) {
            return !std::isalnum(c);
        }), word.end());

        //lowercase
        std::transform(word.begin(), word.end(), word.begin(), ::tolower);

        //word count inc
        wordFrequency[word]++;
    }

    file.close();


    std::vector<std::pair<std::string, int>> wordFrequencyVector(wordFrequency.begin(), wordFrequency.end());

    //sorts vector based on freq
    std::sort(wordFrequencyVector.begin(), wordFrequencyVector.end(), 
              [](const std::pair<std::string, int>& lhs, const std::pair<std::string, int>& rhs) {
                  return lhs.second > rhs.second;
              });

    //prints freq
    for (const auto& pair : wordFrequencyVector) {
        std::cout << pair.second << " " << pair.first << std::endl;
    }
}

int main() {
    std::string filename = "file.txt";
    countWordFrequency(filename);
    return 0;
}
